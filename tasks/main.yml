---

# Prepare/install and configure Ubuntu/Debian for Docker Compose 
- name: Setup Docker Compose for Ubuntu/Debian
  block:
    - name: Install recommended package (to use AUFS storage drivers)
      apt:
        pkg: linux-image-extra-virtual
        update_cache: yes
        install_recommends: no
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Install packages necessary for APT to use a repository over HTTPS
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        update_cache: yes
        install_recommends: no
        state: present

    - name: Add official Docker GPG key (Ubuntu)
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Add official Docker GPG key (Debian)
      apt_key:
        url: "https://download.docker.com/linux/debian/gpg"
        state: present
      when: ansible_distribution == 'Debian'

    - name: Add official Docker APT repository (Ubuntu)
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: 'docker-official'
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Add official Docker APT repository (Debian)
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: 'docker-official'
        update_cache: yes
      when: ansible_distribution == 'Debian'
  when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Debian'  

# Prepare/install and configure CentOS/RedHat for Docker Compose
- name: Setup Docker Compose for CentOS/RedHat 
  block: 
    - name: Install yum utils
      yum:
        name: yum-utils
        state: latest
      
    - name: Install device-mapper-persistent-data
      yum:
        name: device-mapper-persistent-data
        state: latest

    - name: Add official Docker GPG key
      rpm_key:
        key: "https://download.docker.com/linux/centos/gpg"
        state: present

    - name: Add Docker repo
      get_url:    
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install docker-ce & epel-release
      yum:
        name: "{{ packages }}"
        update_cache: yes
        state: present
      vars:  
        packages:
          - docker-ce
          - epel-release 
      when: ansible_distribution == 'CentOS'
      
    - name: Install selinux container-selinux >= 2:2.74, docker-ce & epel-release 
      yum:
        name: "{{ packages }}"
        update_cache: yes
        state: present
      vars:
        packages:
        - http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.107-3.el7.noarch.rpm
        - docker-ce
        - https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      when: ansible_distribution == 'RedHat'

    - name: Install python-pip
      yum: 
        name: python-pip
        update_cache: yes 
        state: present

    - name: Install docker compose 
      pip: 
        name: docker-compose 
        state: present 
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

# Actions which or equal for both systems 
- name: Add users to the Docker group
  user:
    name: "{{ system_user }}"
    groups: docker
    append: yes

- name: Start Docker Daemon 
  systemd: 
    state: started
    enabled: yes
    name: docker